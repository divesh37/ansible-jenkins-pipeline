pipeline{
    agent any
    stages{
        stage('Initiating Pipeline'){
            steps{
                echo 'Starting Pipeline'
                echo '${p_path}'
            }
        }
        stage('Git-Pull & Run test cases') {
            steps {
                echo 'project repository cloning and pulling latest changes...'
                ansiColor('xterm'){
                    ansiblePlaybook(
                        playbook: 'prana.yml',
                        inventory: 'ansible-config/inventory.inv',
                        credentialsId: 'Ambab-Staging-52.38.215.56',
                        skippedTags: 'prana_cmd',
                        colorized: true,
                        extraVars: [
                              project_path: '${p_path}',
			      composefile: '${composefile}',
                              branch: '${select_branch}',
                              repository: '${Repository}'
                        ])
                 }
            }
        }
    }
    post {
        always {
          step([$class: 'Mailer',
            notifyEveryUnstableBuild: true,
            recipients: "${email}",
            sendToIndividuals: true])
        }
    }
}
