pipeline{
    agent any
    stages{
        stage('Initiating Pipeline'){
            steps{
                echo 'Starting Pipeline'
            }
        }
        //stage('Build Started'){
                steps { 
                        mail to:"${email}", subject:"Started Build: ${currentBuild.fullDisplayName}", body: " Hi Team, \n Build ${currentBuild.fullDisplayName} started check live status click on this below link:\n ${BUILD_URL}"
                        }
                }//
        stage('Cloning Repository') {
            steps {
                ansiColor('xterm'){
                    ansiblePlaybook(
                        playbook: 'kmt.yml',
                        inventory: 'ansible-config/inventory.inv',
                        credentialsId: 'devops_staging',
                tags: 'clone',
                        colorized: true,
                        extraVars: [
                              project_path: '${p_path}',
                  composefile: '${composefile}',
                              branch: '${select_branch}',
                              repository: '${Repository}'
                        ])
                 }
            }
        }
  stage('Code quality Check via SonarQube') {
      environment {
        scannerHome = tool 'sonarqube-scanner'
      }
      steps {
        script {
          withSonarQubeEnv("sonarqube") {
            sh "${scannerHome}/bin/sonar-scanner \
                  -Dsonar.projectKey='${project_Key}' \
                  -Dsonar.sources=. \
                  -Dsonar.sourceEncoding=UTF-8 \
                  -Dsonar.host.url=https://sonarqube.a2zportals.co.in \
                  -Dsonar.login=f07b56b7cd7bf1d05078f166b2d760c5d285173c"

          }

        }
      }
    }

    stage("Quality Gate") {
      steps {
        timeout(time: 5, unit: 'MINUTES') {
          waitForQualityGate abortPipeline: true
        }
      }
    }
    }
   }  
 